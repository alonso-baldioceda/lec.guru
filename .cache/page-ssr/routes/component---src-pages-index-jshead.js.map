{"version":3,"file":"component---src-pages-index-jshead.js","mappings":"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","sources":["webpack://lean-enterprise-consulting/./node_modules/camelcase/index.js","webpack://lean-enterprise-consulting/../src/image-utils.ts","webpack://lean-enterprise-consulting/../src/components/hooks.ts","webpack://lean-enterprise-consulting/../src/components/placeholder.tsx","webpack://lean-enterprise-consulting/../src/components/picture.tsx","webpack://lean-enterprise-consulting/../src/components/main-image.tsx","webpack://lean-enterprise-consulting/../src/components/layout-wrapper.tsx","webpack://lean-enterprise-consulting/../src/components/gatsby-image.server.tsx","webpack://lean-enterprise-consulting/../src/components/static-image.server.tsx","webpack://lean-enterprise-consulting/./src/components/Layout.jsx","webpack://lean-enterprise-consulting/./src/components/footer/Footer.jsx","webpack://lean-enterprise-consulting/./src/components/header/Brand.jsx","webpack://lean-enterprise-consulting/./src/components/header/Header.jsx","webpack://lean-enterprise-consulting/./src/components/header/Nav.jsx","webpack://lean-enterprise-consulting/./src/components/header/NavItem.jsx","webpack://lean-enterprise-consulting/./src/components/header/Top.jsx","webpack://lean-enterprise-consulting/./src/pages/index.js","webpack://lean-enterprise-consulting/./src/shared/global.js","webpack://lean-enterprise-consulting/./src/shared/icons.js","webpack://lean-enterprise-consulting/./src/shared/styles.js"],"sourcesContent":["'use strict';\n\nconst UPPERCASE = /[\\p{Lu}]/u;\nconst LOWERCASE = /[\\p{Ll}]/u;\nconst LEADING_CAPITAL = /^[\\p{Lu}](?![\\p{Lu}])/gu;\nconst IDENTIFIER = /([\\p{Alpha}\\p{N}_]|$)/u;\nconst SEPARATORS = /[_.\\- ]+/;\n\nconst LEADING_SEPARATORS = new RegExp('^' + SEPARATORS.source);\nconst SEPARATORS_AND_IDENTIFIER = new RegExp(SEPARATORS.source + IDENTIFIER.source, 'gu');\nconst NUMBERS_AND_IDENTIFIER = new RegExp('\\\\d+' + IDENTIFIER.source, 'gu');\n\nconst preserveCamelCase = (string, toLowerCase, toUpperCase) => {\n\tlet isLastCharLower = false;\n\tlet isLastCharUpper = false;\n\tlet isLastLastCharUpper = false;\n\n\tfor (let i = 0; i < string.length; i++) {\n\t\tconst character = string[i];\n\n\t\tif (isLastCharLower && UPPERCASE.test(character)) {\n\t\t\tstring = string.slice(0, i) + '-' + string.slice(i);\n\t\t\tisLastCharLower = false;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = true;\n\t\t\ti++;\n\t\t} else if (isLastCharUpper && isLastLastCharUpper && LOWERCASE.test(character)) {\n\t\t\tstring = string.slice(0, i - 1) + '-' + string.slice(i - 1);\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = false;\n\t\t\tisLastCharLower = true;\n\t\t} else {\n\t\t\tisLastCharLower = toLowerCase(character) === character && toUpperCase(character) !== character;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = toUpperCase(character) === character && toLowerCase(character) !== character;\n\t\t}\n\t}\n\n\treturn string;\n};\n\nconst preserveConsecutiveUppercase = (input, toLowerCase) => {\n\tLEADING_CAPITAL.lastIndex = 0;\n\n\treturn input.replace(LEADING_CAPITAL, m1 => toLowerCase(m1));\n};\n\nconst postProcess = (input, toUpperCase) => {\n\tSEPARATORS_AND_IDENTIFIER.lastIndex = 0;\n\tNUMBERS_AND_IDENTIFIER.lastIndex = 0;\n\n\treturn input.replace(SEPARATORS_AND_IDENTIFIER, (_, identifier) => toUpperCase(identifier))\n\t\t.replace(NUMBERS_AND_IDENTIFIER, m => toUpperCase(m));\n};\n\nconst camelCase = (input, options) => {\n\tif (!(typeof input === 'string' || Array.isArray(input))) {\n\t\tthrow new TypeError('Expected the input to be `string | string[]`');\n\t}\n\n\toptions = {\n\t\tpascalCase: false,\n\t\tpreserveConsecutiveUppercase: false,\n\t\t...options\n\t};\n\n\tif (Array.isArray(input)) {\n\t\tinput = input.map(x => x.trim())\n\t\t\t.filter(x => x.length)\n\t\t\t.join('-');\n\t} else {\n\t\tinput = input.trim();\n\t}\n\n\tif (input.length === 0) {\n\t\treturn '';\n\t}\n\n\tconst toLowerCase = options.locale === false ?\n\t\tstring => string.toLowerCase() :\n\t\tstring => string.toLocaleLowerCase(options.locale);\n\tconst toUpperCase = options.locale === false ?\n\t\tstring => string.toUpperCase() :\n\t\tstring => string.toLocaleUpperCase(options.locale);\n\n\tif (input.length === 1) {\n\t\treturn options.pascalCase ? toUpperCase(input) : toLowerCase(input);\n\t}\n\n\tconst hasUpperCase = input !== toLowerCase(input);\n\n\tif (hasUpperCase) {\n\t\tinput = preserveCamelCase(input, toLowerCase, toUpperCase);\n\t}\n\n\tinput = input.replace(LEADING_SEPARATORS, '');\n\n\tif (options.preserveConsecutiveUppercase) {\n\t\tinput = preserveConsecutiveUppercase(input, toLowerCase);\n\t} else {\n\t\tinput = toLowerCase(input);\n\t}\n\n\tif (options.pascalCase) {\n\t\tinput = toUpperCase(input.charAt(0)) + input.slice(1);\n\t}\n\n\treturn postProcess(input, toUpperCase);\n};\n\nmodule.exports = camelCase;\n// TODO: Remove this for the next major release\nmodule.exports.default = camelCase;\n","import camelCase from \"camelcase\"\nimport type { IGatsbyImageData } from \"./index\"\n\nconst DEFAULT_PIXEL_DENSITIES = [0.25, 0.5, 1, 2]\nexport const DEFAULT_BREAKPOINTS = [750, 1080, 1366, 1920]\nexport const EVERY_BREAKPOINT = [\n  320, 654, 768, 1024, 1366, 1600, 1920, 2048, 2560, 3440, 3840, 4096,\n]\nconst DEFAULT_FLUID_WIDTH = 800\nconst DEFAULT_FIXED_WIDTH = 800\nconst DEFAULT_ASPECT_RATIO = 4 / 3\n\nexport type Fit = \"cover\" | \"fill\" | \"inside\" | \"outside\" | \"contain\"\n\nexport type Layout = \"fixed\" | \"fullWidth\" | \"constrained\"\nexport type ImageFormat = \"jpg\" | \"png\" | \"webp\" | \"avif\" | \"auto\" | \"\"\n\n/**\n * The minimal required reporter, as we don't want to import it from gatsby-cli\n */\nexport interface IReporter {\n  warn(message: string): void\n}\n\nexport interface ISharpGatsbyImageArgs {\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  placeholder?: \"tracedSVG\" | \"dominantColor\" | \"blurred\" | \"none\"\n  tracedSVGOptions?: Record<string, unknown>\n  width?: number\n  height?: number\n  aspectRatio?: number\n  sizes?: string\n  quality?: number\n  transformOptions?: {\n    fit?: Fit\n    cropFocus?: number | string\n    duotone?: {\n      highlight: string\n      shadow: string\n      opacity?: number\n    }\n    grayscale?: boolean\n    rotate?: number\n    trim?: number\n  }\n  jpgOptions?: Record<string, unknown>\n  pngOptions?: Record<string, unknown>\n  webpOptions?: Record<string, unknown>\n  avifOptions?: Record<string, unknown>\n  blurredOptions?: { width?: number; toFormat?: ImageFormat }\n  breakpoints?: Array<number>\n  outputPixelDensities?: Array<number>\n  backgroundColor?: string\n}\n\nexport interface IImageSizeArgs {\n  width?: number\n  height?: number\n  layout?: Layout\n  filename: string\n  outputPixelDensities?: Array<number>\n  breakpoints?: Array<number>\n  fit?: Fit\n  reporter?: IReporter\n  sourceMetadata: { width: number; height: number }\n}\n\nexport interface IImageSizes {\n  sizes: Array<number>\n  presentationWidth: number\n  presentationHeight: number\n  aspectRatio: number\n  unscaledWidth: number\n}\n\nexport interface IImage {\n  src: string\n  width: number\n  height: number\n  format: ImageFormat\n}\n\nexport interface IGatsbyImageHelperArgs {\n  pluginName: string\n  generateImageSource: (\n    filename: string,\n    width: number,\n    height: number,\n    format: ImageFormat,\n    fit?: Fit,\n    options?: Record<string, unknown>\n  ) => IImage\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  filename: string\n  placeholderURL?: string\n  width?: number\n  height?: number\n  sizes?: string\n  reporter?: IReporter\n  sourceMetadata?: { width: number; height: number; format: ImageFormat }\n  fit?: Fit\n  options?: Record<string, unknown>\n  breakpoints?: Array<number>\n  backgroundColor?: string\n  aspectRatio?: number\n}\n\nconst warn = (message: string): void => console.warn(message)\n\nconst sortNumeric = (a: number, b: number): number => a - b\n\nexport const getSizes = (width: number, layout: Layout): string | undefined => {\n  switch (layout) {\n    // If screen is wider than the max size, image width is the max size,\n    // otherwise it's the width of the screen\n    case `constrained`:\n      return `(min-width: ${width}px) ${width}px, 100vw`\n\n    // Image is always the same width, whatever the size of the screen\n    case `fixed`:\n      return `${width}px`\n\n    // Image is always the width of the screen\n    case `fullWidth`:\n      return `100vw`\n\n    default:\n      return undefined\n  }\n}\n\nexport const getSrcSet = (images: Array<IImage>): string =>\n  images.map(image => `${image.src} ${image.width}w`).join(`,\\n`)\n\nexport function formatFromFilename(filename: string): ImageFormat | undefined {\n  const dot = filename.lastIndexOf(`.`)\n  if (dot !== -1) {\n    const ext = filename.slice(dot + 1)\n    if (ext === `jpeg`) {\n      return `jpg`\n    }\n    if (ext.length === 3 || ext.length === 4) {\n      return ext as ImageFormat\n    }\n  }\n  return undefined\n}\n\nexport function setDefaultDimensions(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageHelperArgs {\n  let {\n    layout = `constrained`,\n    width,\n    height,\n    sourceMetadata,\n    breakpoints,\n    aspectRatio,\n    formats = [`auto`, `webp`],\n  } = args\n  formats = formats.map(format => format.toLowerCase() as ImageFormat)\n  layout = camelCase(layout) as Layout\n\n  if (width && height) {\n    return { ...args, formats, layout, aspectRatio: width / height }\n  }\n  if (sourceMetadata.width && sourceMetadata.height && !aspectRatio) {\n    aspectRatio = sourceMetadata.width / sourceMetadata.height\n  }\n\n  if (layout === `fullWidth`) {\n    width = width || sourceMetadata.width || breakpoints[breakpoints.length - 1]\n    height = height || Math.round(width / (aspectRatio || DEFAULT_ASPECT_RATIO))\n  } else {\n    if (!width) {\n      if (height && aspectRatio) {\n        width = height * aspectRatio\n      } else if (sourceMetadata.width) {\n        width = sourceMetadata.width\n      } else if (height) {\n        width = Math.round(height / DEFAULT_ASPECT_RATIO)\n      } else {\n        width = DEFAULT_FIXED_WIDTH\n      }\n    }\n\n    if (aspectRatio && !height) {\n      height = Math.round(width / aspectRatio)\n    } else if (!aspectRatio) {\n      aspectRatio = width / height\n    }\n  }\n  return { ...args, width, height, aspectRatio, layout, formats }\n}\n\n/**\n * Use this for getting an image for the blurred placeholder. This ensures the\n * aspect ratio and crop match the main image\n */\nexport function getLowResolutionImageURL(\n  args: IGatsbyImageHelperArgs,\n  width = 20\n): string {\n  args = setDefaultDimensions(args)\n  const { generateImageSource, filename, aspectRatio } = args\n  return generateImageSource(\n    filename,\n    width,\n    Math.round(width / aspectRatio),\n    args.sourceMetadata.format || `jpg`,\n    args.fit,\n    args.options\n  )?.src\n}\n\nexport function generateImageData(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageData {\n  args = setDefaultDimensions(args)\n\n  let {\n    pluginName,\n    sourceMetadata,\n    generateImageSource,\n    layout,\n    fit,\n    options,\n    width,\n    height,\n    filename,\n    reporter = { warn },\n    backgroundColor,\n    placeholderURL,\n  } = args\n\n  if (!pluginName) {\n    reporter.warn(\n      `[gatsby-plugin-image] \"generateImageData\" was not passed a plugin name`\n    )\n  }\n\n  if (typeof generateImageSource !== `function`) {\n    throw new Error(`generateImageSource must be a function`)\n  }\n\n  if (!sourceMetadata || (!sourceMetadata.width && !sourceMetadata.height)) {\n    // No metadata means we let the CDN handle max size etc, aspect ratio etc\n    sourceMetadata = {\n      width,\n      height,\n      format: sourceMetadata?.format || formatFromFilename(filename) || `auto`,\n    }\n  } else if (!sourceMetadata.format) {\n    sourceMetadata.format = formatFromFilename(filename)\n  }\n\n  const formats = new Set<ImageFormat>(args.formats)\n\n  if (formats.size === 0 || formats.has(`auto`) || formats.has(``)) {\n    formats.delete(`auto`)\n    formats.delete(``)\n    formats.add(sourceMetadata.format)\n  }\n\n  if (formats.has(`jpg`) && formats.has(`png`)) {\n    reporter.warn(\n      `[${pluginName}] Specifying both 'jpg' and 'png' formats is not supported. Using 'auto' instead`\n    )\n    if (sourceMetadata.format === `jpg`) {\n      formats.delete(`png`)\n    } else {\n      formats.delete(`jpg`)\n    }\n  }\n\n  const imageSizes = calculateImageSizes({ ...args, sourceMetadata })\n\n  const result: IGatsbyImageData[\"images\"] = {\n    sources: [],\n  }\n\n  let sizes = args.sizes\n  if (!sizes) {\n    sizes = getSizes(imageSizes.presentationWidth, layout)\n  }\n\n  formats.forEach(format => {\n    const images = imageSizes.sizes\n      .map(size => {\n        const imageSrc = generateImageSource(\n          filename,\n          size,\n          Math.round(size / imageSizes.aspectRatio),\n          format,\n          fit,\n          options\n        )\n        if (\n          !imageSrc?.width ||\n          !imageSrc.height ||\n          !imageSrc.src ||\n          !imageSrc.format\n        ) {\n          reporter.warn(\n            `[${pluginName}] The resolver for image ${filename} returned an invalid value.`\n          )\n          return undefined\n        }\n        return imageSrc\n      })\n      .filter(Boolean)\n\n    if (format === `jpg` || format === `png` || format === `auto`) {\n      const unscaled =\n        images.find(img => img.width === imageSizes.unscaledWidth) || images[0]\n\n      if (unscaled) {\n        result.fallback = {\n          src: unscaled.src,\n          srcSet: getSrcSet(images),\n          sizes,\n        }\n      }\n    } else {\n      result.sources?.push({\n        srcSet: getSrcSet(images),\n        sizes,\n        type: `image/${format}`,\n      })\n    }\n  })\n\n  const imageProps: Partial<IGatsbyImageData> = {\n    images: result,\n    layout,\n    backgroundColor,\n  }\n\n  if (placeholderURL) {\n    imageProps.placeholder = { fallback: placeholderURL }\n  }\n\n  switch (layout) {\n    case `fixed`:\n      imageProps.width = imageSizes.presentationWidth\n      imageProps.height = imageSizes.presentationHeight\n      break\n\n    case `fullWidth`:\n      imageProps.width = 1\n      imageProps.height = 1 / imageSizes.aspectRatio\n      break\n\n    case `constrained`:\n      imageProps.width = args.width || imageSizes.presentationWidth || 1\n      imageProps.height = (imageProps.width || 1) / imageSizes.aspectRatio\n  }\n\n  return imageProps as IGatsbyImageData\n}\n\nconst dedupeAndSortDensities = (values: Array<number>): Array<number> =>\n  Array.from(new Set([1, ...values])).sort(sortNumeric)\n\nexport function calculateImageSizes(args: IImageSizeArgs): IImageSizes {\n  const {\n    width,\n    height,\n    filename,\n    layout = `constrained`,\n    sourceMetadata: imgDimensions,\n    reporter = { warn },\n    breakpoints = DEFAULT_BREAKPOINTS,\n  } = args\n\n  // check that all dimensions provided are positive\n  const userDimensions = { width, height }\n  const erroneousUserDimensions = Object.entries(userDimensions).filter(\n    ([_, size]) => typeof size === `number` && size < 1\n  )\n  if (erroneousUserDimensions.length) {\n    throw new Error(\n      `Specified dimensions for images must be positive numbers (> 0). Problem dimensions you have are ${erroneousUserDimensions\n        .map(dim => dim.join(`: `))\n        .join(`, `)}`\n    )\n  }\n\n  if (layout === `fixed`) {\n    return fixedImageSizes(args)\n  } else if (layout === `constrained`) {\n    return responsiveImageSizes(args)\n  } else if (layout === `fullWidth`) {\n    return responsiveImageSizes({ breakpoints, ...args })\n  } else {\n    reporter.warn(\n      `No valid layout was provided for the image at ${filename}. Valid image layouts are fixed, fullWidth, and constrained. Found ${layout}`\n    )\n    return {\n      sizes: [imgDimensions.width],\n      presentationWidth: imgDimensions.width,\n      presentationHeight: imgDimensions.height,\n      aspectRatio: imgDimensions.width / imgDimensions.height,\n      unscaledWidth: imgDimensions.width,\n    }\n  }\n}\nexport function fixedImageSizes({\n  filename,\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  reporter = { warn },\n}: IImageSizeArgs): IImageSizes {\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  if (!width) {\n    if (!height) {\n      width = DEFAULT_FIXED_WIDTH\n    } else {\n      width = Math.round(height * aspectRatio)\n    }\n  } else if (!height) {\n    height = Math.round(width / aspectRatio)\n  }\n\n  const originalWidth = width // will use this for presentationWidth, don't want to lose it\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n\n  // If the image is smaller than requested, warn the user that it's being processed as such\n  // print out this message with the necessary information before we overwrite it for sizing\n  if (isTopSizeOverriden) {\n    const fixedDimension = imgDimensions.width < width ? `width` : `height`\n    reporter.warn(`\nThe requested ${fixedDimension} \"${\n      fixedDimension === `width` ? width : height\n    }px\" for the image ${filename} was larger than the actual image ${fixedDimension} of ${\n      imgDimensions[fixedDimension]\n    }px. If possible, replace the current image with a larger one.`)\n\n    if (fixedDimension === `width`) {\n      width = imgDimensions.width\n      height = Math.round(width / aspectRatio)\n    } else {\n      height = imgDimensions.height\n      width = height * aspectRatio\n    }\n  }\n\n  const sizes = densities\n    .filter(size => size >= 1) // remove smaller densities because fixed images don't need them\n    .map(density => Math.round(density * (width as number)))\n    .filter(size => size <= imgDimensions.width)\n\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function responsiveImageSizes({\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  breakpoints,\n  layout,\n}: IImageSizeArgs): IImageSizes {\n  let sizes\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  // Case 1: width of height were passed in, make sure it isn't larger than the actual image\n  width = width && Math.min(width, imgDimensions.width)\n  height = height && Math.min(height, imgDimensions.height)\n\n  // Case 2: neither width or height were passed in, use default size\n  if (!width && !height) {\n    width = Math.min(DEFAULT_FLUID_WIDTH, imgDimensions.width)\n    height = width / aspectRatio\n  }\n\n  // if it still hasn't been found, calculate width from the derived height.\n  // TS isn't smart enough to realise the type for height has been narrowed here\n  if (!width) {\n    width = (height as number) * aspectRatio\n  }\n\n  const originalWidth = width\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n  if (isTopSizeOverriden) {\n    width = imgDimensions.width\n    height = imgDimensions.height\n  }\n\n  width = Math.round(width)\n\n  if (breakpoints?.length > 0) {\n    sizes = breakpoints.filter(size => size <= imgDimensions.width)\n\n    // If a larger breakpoint has been filtered-out, add the actual image width instead\n    if (\n      sizes.length < breakpoints.length &&\n      !sizes.includes(imgDimensions.width)\n    ) {\n      sizes.push(imgDimensions.width)\n    }\n  } else {\n    sizes = densities.map(density => Math.round(density * (width as number)))\n    sizes = sizes.filter(size => size <= imgDimensions.width)\n  }\n\n  // ensure that the size passed in is included in the final output\n  if (layout === `constrained` && !sizes.includes(width)) {\n    sizes.push(width)\n  }\n  sizes = sizes.sort(sortNumeric)\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function getDimensionsAndAspectRatio(\n  dimensions,\n  options\n): { width: number; height: number; aspectRatio: number } {\n  // Calculate the eventual width/height of the image.\n  const imageAspectRatio = dimensions.width / dimensions.height\n\n  let width = options.width\n  let height = options.height\n\n  switch (options.fit) {\n    case `fill`: {\n      width = options.width ? options.width : dimensions.width\n      height = options.height ? options.height : dimensions.height\n      break\n    }\n    case `inside`: {\n      const widthOption = options.width\n        ? options.width\n        : Number.MAX_SAFE_INTEGER\n      const heightOption = options.height\n        ? options.height\n        : Number.MAX_SAFE_INTEGER\n\n      width = Math.min(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.min(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n    case `outside`: {\n      const widthOption = options.width ? options.width : 0\n      const heightOption = options.height ? options.height : 0\n\n      width = Math.max(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.max(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n\n    default: {\n      if (options.width && !options.height) {\n        width = options.width\n        height = Math.round(options.width / imageAspectRatio)\n      }\n\n      if (options.height && !options.width) {\n        width = Math.round(options.height * imageAspectRatio)\n        height = options.height\n      }\n    }\n  }\n\n  return {\n    width,\n    height,\n    aspectRatio: width / height,\n  }\n}\n","/* global GATSBY___IMAGE */\nimport { generateImageData, EVERY_BREAKPOINT } from \"../image-utils\"\nimport type { CSSProperties, HTMLAttributes, ImgHTMLAttributes } from \"react\"\nimport type { Node } from \"gatsby\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { IGatsbyImageData } from \"./gatsby-image.browser\"\nimport type {\n  IGatsbyImageHelperArgs,\n  Layout,\n  IImage,\n  ImageFormat,\n} from \"../image-utils\"\n\n// Native lazy-loading support: https://addyosmani.com/blog/lazy-loading/\nexport const hasNativeLazyLoadSupport = (): boolean =>\n  typeof HTMLImageElement !== `undefined` &&\n  `loading` in HTMLImageElement.prototype\n\nexport function gatsbyImageIsInstalled(): boolean {\n  return typeof GATSBY___IMAGE !== `undefined` && GATSBY___IMAGE\n}\n\nexport type IGatsbyImageDataParent<T = never> = T & {\n  gatsbyImageData: IGatsbyImageData\n}\nexport type IGatsbyImageParent<T = never> = T & {\n  gatsbyImage: IGatsbyImageData\n}\nexport type FileNode = Partial<Node> & {\n  childImageSharp?: IGatsbyImageDataParent<Partial<Node>>\n}\n\nconst isGatsbyImageData = (\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageData | any\n): node is IGatsbyImageData =>\n  // 🦆 check for a deep prop to be sure this is a valid gatsbyImageData object\n  Boolean(node?.images?.fallback?.src)\n\nconst isGatsbyImageDataParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageDataParent<T> | any\n): node is IGatsbyImageDataParent<T> => Boolean(node?.gatsbyImageData)\n\nconst isGatsbyImageParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageParent<T> | any\n): node is IGatsbyImageParent<T> => Boolean(node?.gatsbyImage)\n\nexport type ImageDataLike =\n  | FileNode\n  | IGatsbyImageDataParent\n  | IGatsbyImageParent\n  | IGatsbyImageData\n\nexport const getImage = (\n  node: ImageDataLike | null\n): IGatsbyImageData | undefined => {\n  // This checks both for gatsbyImageData and gatsbyImage\n  if (isGatsbyImageData(node)) {\n    return node\n  }\n  // gatsbyImageData GraphQL field\n  if (isGatsbyImageDataParent(node)) {\n    return node.gatsbyImageData\n  }\n  // gatsbyImage GraphQL field for Gatsby's Image CDN service\n  if (isGatsbyImageParent(node)) {\n    return node.gatsbyImage\n  }\n  return node?.childImageSharp?.gatsbyImageData\n}\n\nexport const getSrc = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.src\n\nexport const getSrcSet = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.srcSet\n\nexport function getWrapperProps(\n  width: number,\n  height: number,\n  layout: Layout\n): Pick<HTMLAttributes<HTMLElement>, \"className\" | \"style\"> & {\n  \"data-gatsby-image-wrapper\": string\n} {\n  const wrapperStyle: CSSProperties = {}\n\n  let className = `gatsby-image-wrapper`\n\n  // If the plugin isn't installed we need to apply the styles inline\n  if (!gatsbyImageIsInstalled()) {\n    wrapperStyle.position = `relative`\n    wrapperStyle.overflow = `hidden`\n  }\n\n  if (layout === `fixed`) {\n    wrapperStyle.width = width\n    wrapperStyle.height = height\n  } else if (layout === `constrained`) {\n    if (!gatsbyImageIsInstalled()) {\n      wrapperStyle.display = `inline-block`\n      wrapperStyle.verticalAlign = `top`\n    }\n    className = `gatsby-image-wrapper gatsby-image-wrapper-constrained`\n  }\n\n  return {\n    className,\n    \"data-gatsby-image-wrapper\": ``,\n    style: wrapperStyle,\n  }\n}\n\nexport interface IUrlBuilderArgs<OptionsType> {\n  width: number\n  height: number\n  baseUrl: string\n  format: ImageFormat\n  options: OptionsType\n}\nexport interface IGetImageDataArgs<OptionsType = Record<string, unknown>> {\n  baseUrl: string\n  /**\n   * For constrained and fixed images, the size of the image element\n   */\n  width?: number\n  height?: number\n  /**\n   * If available, pass the source image width and height\n   */\n  sourceWidth?: number\n  sourceHeight?: number\n  /**\n   * If only one dimension is passed, then this will be used to calculate the other.\n   */\n  aspectRatio?: number\n  layout?: Layout\n  /**\n   * Returns a URL based on the passed arguments. Should be a pure function\n   */\n  urlBuilder: (args: IUrlBuilderArgs<OptionsType>) => string\n\n  /**\n   * Should be a data URI\n   */\n  placeholderURL?: string\n  backgroundColor?: string\n  /**\n   * Used in error messages etc\n   */\n  pluginName?: string\n\n  /**\n   * If you do not support auto-format, pass an array of image types here\n   */\n  formats?: Array<ImageFormat>\n\n  breakpoints?: Array<number>\n\n  /**\n   * Passed to the urlBuilder function\n   */\n  options?: OptionsType\n}\n\n/**\n * Use this hook to generate gatsby-plugin-image data in the browser.\n */\nexport function getImageData<OptionsType>({\n  baseUrl,\n  urlBuilder,\n  sourceWidth,\n  sourceHeight,\n  pluginName = `getImageData`,\n  formats = [`auto`],\n  breakpoints,\n  options,\n  ...props\n}: IGetImageDataArgs<OptionsType>): IGatsbyImageData {\n  if (\n    !breakpoints?.length &&\n    (props.layout === `fullWidth` || (props.layout as string) === `FULL_WIDTH`)\n  ) {\n    breakpoints = EVERY_BREAKPOINT\n  }\n  const generateImageSource = (\n    baseUrl: string,\n    width: number,\n    height?: number,\n    format?: ImageFormat\n  ): IImage => {\n    return {\n      width,\n      height,\n      format,\n      src: urlBuilder({ baseUrl, width, height, options, format }),\n    }\n  }\n\n  const sourceMetadata: IGatsbyImageHelperArgs[\"sourceMetadata\"] = {\n    width: sourceWidth,\n    height: sourceHeight,\n    format: `auto`,\n  }\n\n  const args: IGatsbyImageHelperArgs = {\n    ...props,\n    pluginName,\n    generateImageSource,\n    filename: baseUrl,\n    formats,\n    breakpoints,\n    sourceMetadata,\n  }\n  return generateImageData(args)\n}\n\nexport function getMainProps(\n  isLoading: boolean,\n  isLoaded: boolean,\n  images: IGatsbyImageData[\"images\"],\n  loading?: \"eager\" | \"lazy\",\n  style: CSSProperties = {}\n): Partial<MainImageProps> {\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      transform: `translateZ(0)`,\n      transition: `opacity 250ms linear`,\n      width: `100%`,\n      willChange: `opacity`,\n      ...style,\n    }\n  }\n\n  const result = {\n    ...images,\n    loading,\n    shouldLoad: isLoading,\n    \"data-main-image\": ``,\n    style: {\n      ...style,\n      opacity: isLoaded ? 1 : 0,\n    },\n  }\n\n  return result\n}\n\nexport type PlaceholderImageAttrs = ImgHTMLAttributes<HTMLImageElement> &\n  Pick<PlaceholderProps, \"sources\" | \"fallback\"> & {\n    \"data-placeholder-image\"?: string\n  }\n\nexport function getPlaceholderProps(\n  placeholder: PlaceholderImageAttrs | undefined,\n  isLoaded: boolean,\n  layout: Layout,\n  width?: number,\n  height?: number,\n  backgroundColor?: string,\n  objectFit?: CSSProperties[\"objectFit\"],\n  objectPosition?: CSSProperties[\"objectPosition\"]\n): PlaceholderImageAttrs {\n  const wrapperStyle: CSSProperties = {}\n\n  if (backgroundColor) {\n    wrapperStyle.backgroundColor = backgroundColor\n\n    if (layout === `fixed`) {\n      wrapperStyle.width = width\n      wrapperStyle.height = height\n      wrapperStyle.backgroundColor = backgroundColor\n      wrapperStyle.position = `relative`\n    } else if (layout === `constrained`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    } else if (layout === `fullWidth`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    }\n  }\n\n  if (objectFit) {\n    wrapperStyle.objectFit = objectFit\n  }\n\n  if (objectPosition) {\n    wrapperStyle.objectPosition = objectPosition\n  }\n  const result: PlaceholderImageAttrs = {\n    ...placeholder,\n    \"aria-hidden\": true,\n    \"data-placeholder-image\": ``,\n    style: {\n      opacity: isLoaded ? 0 : 1,\n      transition: `opacity 500ms linear`,\n      ...wrapperStyle,\n    },\n  }\n\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    result.style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      width: `100%`,\n    }\n  }\n\n  return result\n}\n\nexport interface IArtDirectedImage {\n  media: string\n  image: IGatsbyImageData\n}\n\n/**\n * Generate a Gatsby image data object with multiple, art-directed images that display at different\n * resolutions.\n *\n * @param defaultImage The image displayed when no media query matches.\n * It is also used for all other settings applied to the image, such as width, height and layout.\n * You should pass a className to the component with media queries to adjust the size of the container,\n * as this cannot be adjusted automatically.\n * @param artDirected Array of objects which each contains a `media` string which is a media query\n * such as `(min-width: 320px)`, and the image object to use when that query matches.\n */\nexport function withArtDirection(\n  defaultImage: IGatsbyImageData,\n  artDirected: Array<IArtDirectedImage>\n): IGatsbyImageData {\n  const { images, placeholder, ...props } = defaultImage\n  const output: IGatsbyImageData = {\n    ...props,\n    images: {\n      ...images,\n      sources: [],\n    },\n    placeholder: placeholder && {\n      ...placeholder,\n      sources: [],\n    },\n  }\n\n  artDirected.forEach(({ media, image }) => {\n    if (!media) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(\n          \"[gatsby-plugin-image] All art-directed images passed to must have a value set for `media`. Skipping.\"\n        )\n      }\n      return\n    }\n\n    if (\n      image.layout !== defaultImage.layout &&\n      process.env.NODE_ENV === `development`\n    ) {\n      console.warn(\n        `[gatsby-plugin-image] Mismatched image layout: expected \"${defaultImage.layout}\" but received \"${image.layout}\". All art-directed images use the same layout as the default image`\n      )\n    }\n\n    output.images.sources.push(\n      ...image.images.sources.map(source => {\n        return { ...source, media }\n      }),\n      {\n        media,\n        srcSet: image.images.fallback.srcSet,\n      }\n    )\n\n    if (!output.placeholder) {\n      return\n    }\n\n    output.placeholder.sources.push({\n      media,\n      srcSet: image.placeholder.fallback,\n    })\n  })\n  output.images.sources.push(...images.sources)\n  if (placeholder?.sources) {\n    output.placeholder?.sources.push(...placeholder.sources)\n  }\n  return output\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\nimport { Picture, SourceProps } from \"./picture\"\n\nexport type PlaceholderProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: string\n  sources?: Array<SourceProps>\n}\n\nexport const Placeholder: FunctionComponent<PlaceholderProps> =\n  function Placeholder({ fallback, ...props }) {\n    if (fallback) {\n      return (\n        <Picture\n          {...props}\n          fallback={{\n            src: fallback,\n          }}\n          aria-hidden\n          alt=\"\"\n        />\n      )\n    } else {\n      return <div {...props}></div>\n    }\n  }\n\nPlaceholder.displayName = `Placeholder`\nPlaceholder.propTypes = {\n  fallback: PropTypes.string,\n  sources: Picture.propTypes?.sources,\n  alt: function (props, propName, componentName): Error | null {\n    if (!props[propName]) {\n      return null\n    }\n\n    return new Error(\n      `Invalid prop \\`${propName}\\` supplied to \\`${componentName}\\`. Validation failed.`\n    )\n  },\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\n\nexport interface IResponsiveImageProps {\n  sizes?: string\n  srcSet: string\n}\n\nexport type SourceProps = IResponsiveImageProps &\n  (\n    | {\n        media: string\n        type?: string\n      }\n    | {\n        media?: string\n        type: string\n      }\n  )\n\ntype FallbackProps = { src: string } & Partial<IResponsiveImageProps>\n\ntype ImageProps = ImgHTMLAttributes<HTMLImageElement> & {\n  src: string\n  alt: string\n  shouldLoad: boolean\n}\n\nexport type PictureProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: FallbackProps\n  sources?: Array<SourceProps>\n  alt: string\n  shouldLoad?: boolean\n}\n\nconst Image: FunctionComponent<ImageProps> = function Image({\n  src,\n  srcSet,\n  loading,\n  alt = ``,\n  shouldLoad,\n  ...props\n}) {\n  return (\n    <img\n      {...props}\n      decoding=\"async\"\n      loading={loading}\n      src={shouldLoad ? src : undefined}\n      data-src={!shouldLoad ? src : undefined}\n      srcSet={shouldLoad ? srcSet : undefined}\n      data-srcset={!shouldLoad ? srcSet : undefined}\n      alt={alt}\n    />\n  )\n}\n\nexport const Picture: React.FC<PictureProps> = function Picture({\n  fallback,\n  sources = [],\n  shouldLoad = true,\n  ...props\n}) {\n  const sizes = props.sizes || fallback?.sizes\n  const fallbackImage = (\n    <Image {...props} {...fallback} sizes={sizes} shouldLoad={shouldLoad} />\n  )\n\n  if (!sources.length) {\n    return fallbackImage\n  }\n\n  return (\n    <picture>\n      {sources.map(({ media, srcSet, type }) => (\n        <source\n          key={`${media}-${type}-${srcSet}`}\n          type={type}\n          media={media}\n          srcSet={shouldLoad ? srcSet : undefined}\n          data-srcset={!shouldLoad ? srcSet : undefined}\n          sizes={sizes}\n        />\n      ))}\n      {fallbackImage}\n    </picture>\n  )\n}\n\nImage.propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  sizes: PropTypes.string,\n  srcSet: PropTypes.string,\n  shouldLoad: PropTypes.bool,\n}\n\nPicture.displayName = `Picture`\nPicture.propTypes = {\n  alt: PropTypes.string.isRequired,\n  shouldLoad: PropTypes.bool,\n  fallback: PropTypes.exact({\n    src: PropTypes.string.isRequired,\n    srcSet: PropTypes.string,\n    sizes: PropTypes.string,\n  }),\n  sources: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.exact({\n        media: PropTypes.string.isRequired,\n        type: PropTypes.string,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n      PropTypes.exact({\n        media: PropTypes.string,\n        type: PropTypes.string.isRequired,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n    ])\n  ),\n}\n","import React from \"react\"\nimport { Picture, PictureProps } from \"./picture\"\n\nexport type MainImageProps = PictureProps\n\nexport const MainImage: React.FC<PictureProps> = function MainImage(props) {\n  return (\n    <>\n      <Picture {...props} />\n      <noscript>\n        <Picture {...props} shouldLoad={true} />\n      </noscript>\n    </>\n  )\n}\n\nMainImage.displayName = `MainImage`\nMainImage.propTypes = Picture.propTypes\n","import React, { Fragment, FunctionComponent, PropsWithChildren } from \"react\"\nimport terserMacro from \"../../macros/terser.macro\"\nimport { Layout } from \"../image-utils\"\n\nexport interface ILayoutWrapperProps {\n  layout: Layout\n  width: number\n  height: number\n}\n\nconst NativeScriptLoading: FunctionComponent = () => (\n  <script\n    type=\"module\"\n    dangerouslySetInnerHTML={{\n      __html: terserMacro`\nconst hasNativeLazyLoadSupport = typeof HTMLImageElement !== \"undefined\" && \"loading\" in HTMLImageElement.prototype;\nif (hasNativeLazyLoadSupport) {\n  const gatsbyImages = document.querySelectorAll('img[data-main-image]');\n  for (let mainImage of gatsbyImages) {\n    if (mainImage.dataset.src) {\n      mainImage.setAttribute('src', mainImage.dataset.src)\n      mainImage.removeAttribute('data-src')\n    }\n    if (mainImage.dataset.srcset) {\n      mainImage.setAttribute('srcset', mainImage.dataset.srcset)\n      mainImage.removeAttribute('data-srcset')\n    }\n\n    const sources = mainImage.parentNode.querySelectorAll('source[data-srcset]');\n    for (let source of sources) {\n      source.setAttribute('srcset', source.dataset.srcset)\n      source.removeAttribute('data-srcset')\n    }\n\n    if (mainImage.complete) {\n      mainImage.style.opacity = 1;\n\n      // also hide the placeholder\n      mainImage.parentNode.parentNode.querySelector('[data-placeholder-image]').style.opacity = 0;\n    }\n  }\n}\n`,\n    }}\n  />\n)\n\nexport function getSizer(\n  layout: Layout,\n  width: number,\n  height: number\n): string {\n  let sizer = ``\n  if (layout === `fullWidth`) {\n    sizer = `<div aria-hidden=\"true\" style=\"padding-top: ${\n      (height / width) * 100\n    }%;\"></div>`\n  }\n\n  if (layout === `constrained`) {\n    sizer = `<div style=\"max-width: ${width}px; display: block;\"><img alt=\"\" role=\"presentation\" aria-hidden=\"true\" src=\"data:image/svg+xml;charset=utf-8,%3Csvg%20height='${height}'%20width='${width}'%20xmlns='http://www.w3.org/2000/svg'%20version='1.1'%3E%3C/svg%3E\" style=\"max-width: 100%; display: block; position: static;\"></div>`\n  }\n\n  return sizer\n}\n\nconst Sizer: FunctionComponent<ILayoutWrapperProps> = function Sizer({\n  layout,\n  width,\n  height,\n}) {\n  if (layout === `fullWidth`) {\n    return (\n      <div aria-hidden style={{ paddingTop: `${(height / width) * 100}%` }} />\n    )\n  }\n\n  if (layout === `constrained`) {\n    return (\n      <div style={{ maxWidth: width, display: `block` }}>\n        <img\n          alt=\"\"\n          role=\"presentation\"\n          aria-hidden=\"true\"\n          src={`data:image/svg+xml;charset=utf-8,%3Csvg%20height='${height}'%20width='${width}'%20xmlns='http://www.w3.org/2000/svg'%20version='1.1'%3E%3C/svg%3E`}\n          style={{\n            maxWidth: `100%`,\n            display: `block`,\n            position: `static`,\n          }}\n        />\n      </div>\n    )\n  }\n\n  return null\n}\n\nexport const LayoutWrapper: FunctionComponent<\n  PropsWithChildren<ILayoutWrapperProps>\n> = function LayoutWrapper({ children, ...props }) {\n  return (\n    <Fragment>\n      <Sizer {...props} />\n      {children}\n\n      {SERVER ? <NativeScriptLoading /> : null}\n    </Fragment>\n  )\n}\n","import React from \"react\"\nimport { getWrapperProps, getMainProps, getPlaceholderProps } from \"./hooks\"\nimport { Placeholder } from \"./placeholder\"\nimport { MainImage, MainImageProps } from \"./main-image\"\nimport { LayoutWrapper } from \"./layout-wrapper\"\nimport PropTypes from \"prop-types\"\nimport type { FunctionComponent, WeakValidationMap } from \"react\"\nimport type { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\n\nconst removeNewLines = (str: string): string => str.replace(/\\n/g, ``)\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> =\n  function GatsbyImage({\n    as = `div`,\n    className,\n    class: preactClass,\n    style,\n    image,\n    loading = `lazy`,\n    imgClassName,\n    imgStyle,\n    backgroundColor,\n    objectFit,\n    objectPosition,\n    ...props\n  }) {\n    if (!image) {\n      console.warn(`[gatsby-plugin-image] Missing image prop`)\n      return null\n    }\n\n    if (preactClass) {\n      className = preactClass\n    }\n\n    imgStyle = {\n      objectFit,\n      objectPosition,\n      backgroundColor,\n      ...imgStyle,\n    }\n\n    const {\n      width,\n      height,\n      layout,\n      images,\n      placeholder,\n      backgroundColor: placeholderBackgroundColor,\n    } = image\n\n    const {\n      style: wStyle,\n      className: wClass,\n      ...wrapperProps\n    } = getWrapperProps(width, height, layout)\n\n    const cleanedImages: IGatsbyImageData[\"images\"] = {\n      fallback: undefined,\n      sources: [],\n    }\n    if (images.fallback) {\n      cleanedImages.fallback = {\n        ...images.fallback,\n        srcSet: images.fallback.srcSet\n          ? removeNewLines(images.fallback.srcSet)\n          : undefined,\n      }\n    }\n\n    if (images.sources) {\n      cleanedImages.sources = images.sources.map(source => {\n        return {\n          ...source,\n          srcSet: removeNewLines(source.srcSet),\n        }\n      })\n    }\n\n    return React.createElement(\n      as,\n      {\n        ...wrapperProps,\n        style: {\n          ...wStyle,\n          ...style,\n          backgroundColor,\n        },\n        className: `${wClass}${className ? ` ${className}` : ``}`,\n      },\n      <LayoutWrapper layout={layout} width={width} height={height}>\n        <Placeholder\n          {...getPlaceholderProps(\n            placeholder,\n            false,\n            layout,\n            width,\n            height,\n            placeholderBackgroundColor,\n            objectFit,\n            objectPosition\n          )}\n        />\n\n        <MainImage\n          data-gatsby-image-ssr=\"\"\n          className={imgClassName}\n          {...(props as Omit<\n            MainImageProps,\n            \"images\" | \"fallback\" | \"onError\" | \"onLoad\"\n          >)}\n          // When eager is set we want to start the isLoading state on true (we want to load the img without react)\n          {...getMainProps(\n            loading === `eager`,\n            false,\n            cleanedImages,\n            loading,\n            imgStyle\n          )}\n        />\n      </LayoutWrapper>\n    )\n  }\n\nexport const altValidator: PropTypes.Validator<string> = (\n  props: GatsbyImageProps,\n  propName,\n  componentName,\n  ...rest\n): Error | undefined => {\n  if (!props.alt && props.alt !== ``) {\n    return new Error(\n      `The \"alt\" prop is required in ${componentName}. If the image is purely presentational then pass an empty string: e.g. alt=\"\". Learn more: https://a11y-style-guide.com/style-guide/section-media.html`\n    )\n  }\n\n  return PropTypes.string(props, propName, componentName, ...rest)\n}\n\nexport const propTypes = {\n  image: PropTypes.object.isRequired,\n  alt: altValidator,\n} as WeakValidationMap<GatsbyImageProps>\n","import React, { FunctionComponent, ReactElement } from \"react\"\nimport {\n  altValidator,\n  GatsbyImage as GatsbyImageServer,\n} from \"./gatsby-image.server\"\nimport { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\nimport PropTypes from \"prop-types\"\nimport { ISharpGatsbyImageArgs } from \"../image-utils\"\n\nexport interface IStaticImageProps\n  extends Omit<GatsbyImageProps, \"image\">,\n    Omit<ISharpGatsbyImageArgs, \"backgroundColor\"> {\n  src: string\n  filename?: string\n}\n\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nexport function _getStaticImage(\n  GatsbyImage: FunctionComponent<GatsbyImageProps>\n): React.FC<IStaticImageProps & IPrivateProps> {\n  return function StaticImage({\n    src,\n    __imageData: imageData,\n    __error,\n    // We extract these because they're not meant to be passed-down to GatsbyImage\n    /* eslint-disable @typescript-eslint/no-unused-vars */\n    width,\n    height,\n    aspectRatio,\n    tracedSVGOptions,\n    placeholder,\n    formats,\n    quality,\n    transformOptions,\n    jpgOptions,\n    pngOptions,\n    webpOptions,\n    avifOptions,\n    blurredOptions,\n    breakpoints,\n    outputPixelDensities,\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n    ...props\n  }): ReactElement {\n    if (__error) {\n      console.warn(__error)\n    }\n\n    if (imageData) {\n      return <GatsbyImage image={imageData} {...props} />\n    }\n    console.warn(`Image not loaded`, src)\n    if (!__error && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `Please ensure that \"gatsby-plugin-image\" is included in the plugins array in gatsby-config.js, and that your version of gatsby is at least 2.24.78`\n      )\n    }\n    return null\n  }\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageServer)\n\nconst checkDimensionProps: PropTypes.Validator<number> = (\n  props: IStaticImageProps & IPrivateProps,\n  propName: keyof IStaticImageProps & IPrivateProps,\n  ...rest\n) => {\n  if (\n    props.layout === `fullWidth` &&\n    (propName === `width` || propName === `height`) &&\n    props[propName]\n  ) {\n    return new Error(\n      `\"${propName}\" ${props[propName]} may not be passed when layout is fullWidth.`\n    )\n  }\n  return PropTypes.number(props, propName, ...rest)\n}\n\nconst validLayouts = new Set([`fixed`, `fullWidth`, `constrained`])\n\nexport const propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: altValidator,\n  width: checkDimensionProps,\n  height: checkDimensionProps,\n  sizes: PropTypes.string,\n  layout: (props: IStaticImageProps & IPrivateProps): Error | undefined => {\n    if (props.layout === undefined) {\n      return undefined\n    }\n    if (validLayouts.has(props.layout)) {\n      return undefined\n    }\n\n    return new Error(\n      `Invalid value ${props.layout}\" provided for prop \"layout\". Defaulting to \"constrained\". Valid values are \"fixed\", \"fullWidth\" or \"constrained\".`\n    )\n  },\n}\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","import React from \"react\";\n\n// Components\nimport Header from \"./header/Header\";\nimport Footer from \"./footer/Footer\";\n\n// Styles\nimport GlobalStyle from \"./../shared/global.js\";\n\nconst Layout = ({ children, footer, header }) => {\n  return (\n    <>\n      <GlobalStyle />\n      <Header brand={header.brand} nav={header.nav} top={header.top} />\n      <main className=\"main\" id=\"main\">\n        {children}\n      </main>\n      <Footer />\n    </>\n  );\n};\n\nexport default Layout;\n","import React from \"react\";\n\nconst Footer = () => {\n  return (\n    <>\n      <h1>Footer</h1>\n    </>\n  );\n};\n\nexport default Footer;\n","import React from \"react\";\nimport { Link as GatsbyLink } from \"gatsby\";\nimport { StaticImage } from \"gatsby-plugin-image\";\nimport styled from \"styled-components\";\n\n// Variables\nimport { prefix } from \"./../../shared/styles.js\";\n\n// Styles\nconst StyledBrand = styled((props) => <div {...props} />)`\n  width: 156px;\n\n  @media (min-width: 981px) {\n    width: 200px;\n  }\n\n  img {\n    max-width: 100% !important;\n    width: 100% !important;\n  }\n`;\n\nconst Brand = ({ alt, to }) => {\n  return (\n    <StyledBrand className={`${prefix}-brand`}>\n      <GatsbyLink to={to}>\n        <StaticImage\n          src=\"./../../images/logo.jpeg\"\n          alt={alt ? alt : \"\"}\n          placeholder=\"blurred\"\n          layout=\"fullWidth\"\n        />\n      </GatsbyLink>\n    </StyledBrand>\n  );\n};\n\nexport default Brand;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\n// Variables\nimport { prefix } from \"./../../shared/styles.js\";\n\n// Components\nimport Brand from \"./Brand\";\nimport Nav from \"./Nav\";\nimport Top from \"./Top\";\n\n// Styles\nconst StyledHeader = styled.header`\n  width: 100%;\n\n  .container {\n    align-items: center;\n    display: flex;\n    justify-content: space-between;\n    padding: 5px 20px 7px;\n\n    @media (min-width: 981px) {\n      padding: 10px 20px 12px;\n    }\n\n    .hide-nav {\n      display: none;\n\n      @media (min-width: 981px) {\n        display: flex;\n      }\n    }\n  }\n`;\n\nconst Header = ({ brand, nav, top }) => (\n  <StyledHeader className={`bg-marino ${prefix}-header`}>\n    <Top phone={top.phone} email={top.email} />\n    <div className=\"container\">\n      <Brand {...brand} />\n      <div className=\"hide-nav\">\n        <Nav nav={nav} />\n      </div>\n    </div>\n  </StyledHeader>\n);\n\nexport default Header;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\n// Components\nimport NavItem from \"./NavItem\";\n\n// Variables\nimport { prefix } from \"./../../shared/styles.js\";\n\n// Styles\nconst StyledNav = styled.nav`\n  li {\n    display: inline-block;\n    padding-right: 22px;\n\n    &:last-child {\n      padding-right: 0;\n    }\n  }\n`;\n\nconst Nav = ({ nav }) => {\n  console.log(nav);\n  return (\n    <StyledNav className={`${prefix}-nav`}>\n      <ul>\n        {nav.map((item, index) => (\n          <li key={index}>\n            <NavItem to={item.link} label={item.label} />\n          </li>\n        ))}\n      </ul>\n    </StyledNav>\n  );\n};\n\nexport default Nav;\n","import React from \"react\";\nimport { Link as GatsbyLink } from \"gatsby\";\nimport styled from \"styled-components\";\n\n// Variables\nimport { prefix, color } from \"./../../shared/styles.js\";\n\n// Styles\nconst StyledNavItem = styled((props) => <GatsbyLink {...props} />)`\n  color: ${color.botti};\n  font-size: 19px;\n  font-weight: 600;\n  letter-spacing: 1px;\n  line-height: 14px;\n  margin: 0;\n  padding: 0;\n  transition: all 0.4s ease-in-out;\n  text-decoration: none;\n\n  &:hover {\n    opacity: 0.7;\n  }\n`;\n\nconst NavItem = ({ to, label }) => (\n  <StyledNavItem className={`${prefix}-nav-item`} to={to}>\n    {label}\n  </StyledNavItem>\n);\n\nexport default NavItem;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\n// Variables\nimport { prefix, color } from \"../../shared/styles.js\";\nimport { icons } from \"../../shared/icons.js\";\n\n// Styles\nconst StyledTop = styled((props) => <div {...props} />)`\n  background-color: ${color.botti};\n  height: 40px;\n\n  .container {\n    align-items: center;\n    display: flex;\n    justify-content: flex-start;\n    margin: 0 auto;\n    max-width: 1080px;\n    width: 80%;\n\n    a {\n      text-decoration: none;\n      display: flex;\n      align-items: center;\n      margin-right: 10px;\n\n      &:last-child {\n        margin-right: 0;\n      }\n\n      span {\n        color: ${color.white};\n        font-size: 15px;\n        font-weight: 600;\n      }\n\n      svg {\n        width: 15px;\n        margin-right: 10px;\n\n        path {\n          fill: ${color.white};\n        }\n      }\n    }\n  }\n`;\n\nconst Top = ({ phone, email }) => (\n  <StyledTop className={`${prefix}-header-top`}>\n    <div className=\"container\">\n      <a href={`tel:$${phone.href}`}>\n        <span dangerouslySetInnerHTML={{ __html: icons[phone.icon] }} />\n        <span>{phone.label}</span>\n      </a>\n\n      <a href={`mailto:${email.href}`}>\n        <span dangerouslySetInnerHTML={{ __html: icons[email.icon] }} />\n        <span>{email.label}</span>\n      </a>\n    </div>\n  </StyledTop>\n);\n\nexport default Top;\n","import React from \"react\";\n\n// Components\nimport Layout from \"../components/Layout\";\n\nconst IndexPage = () => {\n  const data = {\n    header: {\n      top: {\n        phone: { label: \"Call now\", href: \"+19542583117\", icon: \"call\" },\n        email: {\n          label: \"contact@lec.guru\",\n          href: \"contact@lec.guru\",\n          icon: \"envelope\",\n        },\n      },\n      brand: {\n        alt: \"Lean Enterprise Consulting\",\n        to: \"/\",\n      },\n      nav: [\n        {\n          label: \"Home\",\n          link: \"/\",\n        },\n        {\n          label: \"About Us\",\n          link: \"/about\",\n        },\n        {\n          label: \"Services\",\n          link: \"/services\",\n        },\n        {\n          label: \"Executive Advisors\",\n          link: \"/executive-advisors\",\n        },\n        {\n          label: \"Contact\",\n          link: \"/contact\",\n        },\n        {\n          label: \"Blog\",\n          link: \"/blog\",\n        },\n      ],\n    },\n  };\n\n  return (\n    <Layout header={data.header}>\n      {/* Parallax */}\n      <h1>#Parallax</h1>\n      {/* Title */}\n      <h1>#Title</h1>\n      {/* Slider */}\n      <h1>#Slider</h1>\n      {/* Title */}\n      <h1>#Title</h1>\n      {/* Cards */}\n      <h1>#Cards</h1>\n    </Layout>\n  );\n};\n\nexport default IndexPage;\n\nexport const Head = () => <title>Home Page</title>;\n","import { createGlobalStyle } from \"styled-components\";\n\n// Variables\nimport { color } from \"./styles\";\n\n// Constants\n// Please note that the fontUrl is commented out because it is not used in this project.\n// We can use it in the future if we want to import a font from Google Fonts.\n// export const fontUrl =\n//   \"https://fonts.googleapis.com/css?family=Ubuntu:300,400,500,700\";\n\nconst GlobalStyles = createGlobalStyle`\n  /*********************/\n  /***** Typography ****/\n  /*********************/\n\n  /* Reset */\n  * {\n    box-sizing: border-box;\n    margin: 0;\n    padding: 0;\n  }\n\n  body {\n    font-family: \"PT Serif\", Georgia, \"Times New Roman\", serif;\n    font-size: 1.125rem;\n    font-weight: 400;\n    margin: 0;\n    padding: 0;\n  }\n\n  h1,\n  h2,\n  h3,\n  h4,\n  h5,\n  h6 {\n  }\n\n\n\n  /* h1 {\n    @media (min-width: <number>px) {\n    }\n  } */\n\n  /*********************/\n  /**** Backgrounds ****/\n  /*********************/\n\n  .bg-botti {\n    background-color: ${color.botti};\n  }\n\n  .bg-marino {\n    background-color: ${color.marino};\n  } \n\n  .bg-chateau {\n    background-color: ${color.chateau};\n  }\n\n  .bg-white {\n    background-color: ${color.white};\n  }\n\n  .bg-black {\n    background-color: ${color.black};\n  }\n\n  /*********************/\n  /***** Text Color ****/\n  /*********************/\n\n  .text-botti {\n    color: ${color.botti};\n  }\n\n  .text-marino {\n    color: ${color.marino};\n  }\n\n  .text-chateau {\n    color: ${color.chateau};\n  }\n\n  .text-white {\n    color: ${color.white};\n  }\n\n  .text-black {\n    color: ${color.black};\n  }\n`;\n\nexport default GlobalStyles;\n","export const icons = {\n  call: `<svg version=\"1.0\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path d=\"M89.4 1.5C77 4.2 74.7 6 42.4 38.4 14.2 66.5 12 69 8.7 76c-5.5 11.6-6.8 17.8-7.4 34.2-.6 16.5.7 27.4 5.7 46.4 30.1 114.3 164.7 264.7 293.5 327.9 38.2 18.7 67.1 26.9 95.5 27 17.4 0 26.2-1.8 38.3-7.7 7.8-3.8 9.8-5.7 37.9-33.7 31.4-31.4 33.2-33.7 37.2-47 2.1-7 2.1-20.2 0-27.2-3.6-12-5.1-13.8-44.8-53.7-20.9-21.1-40.8-40.3-44.1-42.7-19.8-14.1-45.3-12.1-61.9 4.8-5 5.1-7 8.1-10.4 16.2-2.4 5.4-5.5 11.5-7 13.5-9.6 13-28 21.2-43.7 19.6-23.4-2.5-58.3-23.7-87.9-53.3-35.8-35.8-56.9-77-51.8-101 2.4-11.2 10.3-22.9 19.6-29.1 2.2-1.6 7-4.1 10.6-5.6 10.4-4.4 12.9-5.9 17.8-10.1 16.6-14.5 20.2-41.7 8.1-61-3.5-5.7-72.5-75.4-80.9-81.9-6.7-5.1-15.5-9.1-23.4-10.5-7.5-1.4-12.5-1.3-20.2.4z\"/></svg>`,\n  envelope: `<svg version=\"1.0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"682.667\" height=\"682.667\" viewBox=\"0 0 512 512\"><path d=\"M32.5 65.4c-6.8 1.7-12.9 5-18.2 9.9-6.9 6.4-8.6 10.8-6.1 16.1.6 1.4 23 21.1 49.7 43.8 64.3 54.6 141.7 120.9 166.9 143 17.6 15.4 21.1 18 25.8 19.4 4.9 1.4 5.9 1.4 10.7 0 5.8-1.7 5.6-1.5 33.7-26.1 23.6-20.7 93.1-80.2 159.1-136.3 26.7-22.7 49.1-42.4 49.7-43.8 2.5-5.3.8-9.7-6.1-16.1-5.5-5.1-12.4-8.7-19.5-10.2-8-1.7-438.8-1.4-445.7.3z\"/><path d=\"M4.7 128.1C-.2 131 0 125 0 271.3 0 358.8.4 409.6 1 413c3.2 17 17 30.8 33.9 34 7.4 1.4 434.8 1.4 442.2 0 16.9-3.2 30.7-17 33.9-34 .6-3.4 1-54.2 1-141.7 0-147 .2-140.5-4.9-143.3-2.8-1.5-9.3-1.2-11.7.4-3.3 2.3-136.8 116.1-168.3 143.5-15.6 13.5-32.5 28.1-37.5 32.5-14.2 12.3-26.3 16.8-39.5 14.7-12.5-2-16-4.3-43.1-28.1-31.2-27.4-179.9-154.4-189.4-161.8-3.1-2.4-9.7-3-12.9-1.1z\"/></svg>`,\n};\n","export const prefix = \"lec\";\n\n// Colors\nexport const color = {\n  botti: \"#C6D4E0\",\n  marino: \"#43749C\",\n  chateau: \"#9ca7ad\",\n  transparent: \"transparent\",\n  white: \"#FFFFFF\",\n  black: \"#000000\",\n};\n\n// Typography\nexport const typography = {\n  type: {\n    primary: '\"Ubuntu\", \"Helvetica Neue\", Helvetica, Arial, sans-serif',\n    code: '\"SFMono-Regular\", Consolas, \"Liberation Mono\", Menlo, Courier, monospace',\n  },\n  weight: {\n    regular: \"400\",\n    bold: \"700\",\n    extrabold: \"800\",\n    black: \"900\",\n  },\n};\n"],"names":["DEFAULT_PIXEL_DENSITIES","DEFAULT_BREAKPOINTS","EVERY_BREAKPOINT","DEFAULT_ASPECT_RATIO","warn","message","sortNumeric","a","b","getSrcSet","images","map","image","src","width","join","formatFromFilename","filename","lastIndexOf","dot","ext","slice","length","setDefaultDimensions","args","layout","height","sourceMetadata","breakpoints","aspectRatio","formats","format","toLowerCase","camelCase","Math","round","_extends","getLowResolutionImageURL","generateImageSource","fit","options","_generateImageSource","generateImageData","_sourceMetadata","pluginName","reporter","_args2$reporter","backgroundColor","placeholderURL","Error","Set","size","has","delete","add","imageSizes","imgDimensions","_args$reporter","_args$breakpoints","erroneousUserDimensions","Object","entries","filter","_","_ref","dim","_ref2","_ref2$fit","outputPixelDensities","_ref2$reporter","densities","dedupeAndSortDensities","getDimensionsAndAspectRatio","calculated","originalWidth","fixedDimension","sizes","density","presentationWidth","presentationHeight","unscaledWidth","fixedImageSizes","responsiveImageSizes","calculateImageSizes","result","sources","getSizes","forEach","imageSrc","Boolean","unscaled","find","img","fallback","srcSet","_result$sources","push","type","imageProps","placeholder","values","Array","from","sort","_ref3","_ref3$fit","_ref3$outputPixelDens","min","includes","dimensions","imageAspectRatio","widthOption","Number","MAX_SAFE_INTEGER","heightOption","_widthOption","max","E","gatsbyImageIsInstalled","GATSBY___IMAGE","getImage","node","_node$images$fallback","isGatsbyImageData","gatsbyImageData","isGatsbyImageDataParent","gatsbyImage","isGatsbyImageParent","childImageSharp","getSrc","_getImage","_getImage$images","_getImage$images$fall","_getImage2$images","_getImage2","_getImage2$images$fal","getImageData","baseUrl","urlBuilder","sourceWidth","sourceHeight","props","_objectWithoutPropertiesLoose","_breakpoints","withArtDirection","defaultImage","artDirected","_output$placeholder","_output$placeholder$s","output","_excluded2","media","process","env","NODE_ENV","console","source","concat","apply","_Picture$propTypes","loading","alt","shouldLoad","React","decoding","undefined","Picture","_ref2$shouldLoad","Image","key","fallbackImage","propTypes","PropTypes","string","isRequired","bool","displayName","exact","arrayOf","oneOfType","Placeholder","createElement","propName","componentName","MainImage","NativeScriptLoading","dangerouslySetInnerHTML","__html","Sizer","style","paddingTop","maxWidth","display","role","position","LayoutWrapper","children","Fragment","H","F","removeNewLines","str","replace","GatsbyImage","as","className","preactClass","imgClassName","imgStyle","objectFit","objectPosition","placeholderBackgroundColor","wrapperStyle","overflow","verticalAlign","getWrapperProps","wStyle","_getWrapperProps","wClass","wrapperProps","cleanedImages","getPlaceholderProps","isLoaded","top","left","bottom","right","opacity","transition","isLoading","transform","willChange","getMainProps","_excluded","StaticImage","imageData","__imageData","__error","_getStaticImage","GatsbyImageServer","checkDimensionProps","number","validLayouts","Header","Footer","GlobalStyle","Layout","footer","header","brand","nav","Link","GatsbyLink","styled","prefix","StyledBrand","Brand","to","Nav","Top","StyledHeader","phone","email","NavItem","StyledNav","log","item","index","link","label","color","StyledNavItem","botti","icons","StyledTop","white","href","icon","IndexPage","data","Head","createGlobalStyle","GlobalStyles","marino","chateau","black","call","envelope","transparent","typography","primary","code","weight","regular","bold","extrabold"],"sourceRoot":""}